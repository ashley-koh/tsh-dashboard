tags:
  - name: users
    description: users API

  - name: question
    description: question API

  - name: answer
    description: answer API

  - name: form
    description: form API

  - name: auth
    description: auth API

paths:
  # [GET] users
  /users:
    get:
      tags:
        - users
      summary: Find All Users
      responses:
        200:
          description: 'OK'
        500:
          description: 'Server Error'

    # [POST] users
    post:
      tags:
        - users
      summary: Add User
      parameters:
        - name: body
          in: body
          description: user Data
          required: true
          schema:
            $ref: '#/definitions/users'
      responses:
        201:
          description: 'Created'
        400:
          description: 'Bad Request'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'

  # [GET] users/id
  /users/{id}:
    get:
      tags:
        - users
      summary: Find User By Id
      parameters:
        - name: id
          in: path
          description: User Id
          required: true
      responses:
        200:
          description: 'OK'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'

    # [PUT] users/id
    put:
      tags:
        - users
      summary: Update User By Id
      parameters:
        - name: id
          in: path
          description: user Id
          required: true
        - name: body
          in: body
          description: user Data
          required: true
          schema:
            $ref: '#/definitions/users'
      responses:
        200:
          description: 'OK'
        400:
          description: 'Bad Request'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'

    # [DELETE] users/id
    delete:
      tags:
        - users
      summary: Delete User By Id
      parameters:
        - name: id
          in: path
          description: user Id
          required: true
      responses:
        200:
          description: 'OK'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'

  # [GET] questions
  /question:
    get:
      tags:
        - question
      summary: Find All Questions
      responses:
        200:
          description: 'OK'
        500:
          description: 'Server Error'

    # [POST] question
    post:
      tags:
        - question
      summary: Add Question
      parameters:
        - name: body
          in: body
          description: question Data
          required: true
          schema:
            $ref: '#/definitions/question'
      responses:
        201:
          description: 'Created'
        400:
          description: 'Bad Request'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'

  # [GET] question/id
  /question/{id}:
    get:
      tags:
        - question
      summary: Find Question By Id
      parameters:
        - name: id
          in: path
          description: Question Id
          required: true
      responses:
        200:
          description: 'OK'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'

    # [PUT] question/id
    put:
      tags:
        - question
      summary: Update Question By Id
      parameters:
        - name: id
          in: path
          description: question Id
          required: true
        - name: body
          in: body
          description: question Data
          required: true
          schema:
            $ref: '#/definitions/question'
      responses:
        200:
          description: 'OK'
        400:
          description: 'Bad Request'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'

    # [DELETE] question/id
    delete:
      tags:
        - question
      summary: Delete Question By Id
      parameters:
        - name: id
          in: path
          description: question Id
          required: true
      responses:
        200:
          description: 'OK'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'

  # [GET] answers
  /answer:
    get:
      tags:
        - answer
      summary: Find All Answers
      responses:
        200:
          description: 'OK'
        500:
          description: 'Server Error'

    # [POST] answer
    post:
      tags:
        - answer
      summary: Add Answer
      parameters:
        - name: body
          in: body
          description: answer Data
          required: true
          schema:
            $ref: '#/definitions/answer'
      responses:
        201:
          description: 'Created'
        400:
          description: 'Bad Request'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'

  # [GET] answer/id
  /answer/{id}:
    get:
      tags:
        - answer
      summary: Find Answer By Id
      parameters:
        - name: id
          in: path
          description: Answer Id
          required: true
      responses:
        200:
          description: 'OK'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'

    # [PUT] answer/id
    put:
      tags:
        - answer
      summary: Update Answer By Id
      parameters:
        - name: id
          in: path
          description: answer Id
          required: true
        - name: body
          in: body
          description: answer Data
          required: true
          schema:
            $ref: '#/definitions/answer'
      responses:
        200:
          description: 'OK'
        400:
          description: 'Bad Request'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'

    # [DELETE] answer/id
    delete:
      tags:
        - answer
      summary: Delete Answer By Id
      parameters:
        - name: id
          in: path
          description: answer Id
          required: true
      responses:
        200:
          description: 'OK'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'

  # [GET] forms
  /form:
    get:
      tags:
        - form
      summary: Find All Forms
      responses:
        200:
          description: 'OK'
        500:
          description: 'Server Error'

    # [POST] form
    post:
      tags:
        - form
      summary: Add Form
      parameters:
        - name: body
          in: body
          description: form Data
          required: true
          schema:
            $ref: '#/definitions/form'
      responses:
        201:
          description: 'Created'
        400:
          description: 'Bad Request'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'

  # [GET] form/id
  /form/{id}:
    get:
      tags:
        - form
      summary: Find Form By Id
      parameters:
        - name: id
          in: path
          description: Form Id
          required: true
      responses:
        200:
          description: 'OK'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'

    # [PUT] form/id
    put:
      tags:
        - form
      summary: Update Form By Id
      parameters:
        - name: id
          in: path
          description: form Id
          required: true
        - name: body
          in: body
          description: form Data
          required: true
          schema:
            $ref: '#/definitions/form'
      responses:
        200:
          description: 'OK'
        400:
          description: 'Bad Request'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'

    # [DELETE] form/id
    delete:
      tags:
        - form
      summary: Delete Form By Id
      parameters:
        - name: id
          in: path
          description: form Id
          required: true
      responses:
        200:
          description: 'OK'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'

  # [POST] email/id
  /email:
    post:
      tags:
        - email
      summary: Send Reminder/Confirmation Email to Recipient
      parameters:
        - name: body
          in: body
          description: email Data
          required: true
          schema:
            $ref: '#/definitions/email'
      responses:
        200:
          description: 'OK'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'

  # [GET] report/id
  /report:
    post:
      tags:
        - report
      summary: Generate PDF of Employee Report
      parameters:
        - name: id
          in: id
          description: Employee ID
          required: true

      responses:
        200:
          description: 'OK'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'

  # auth
  /signup:
    post:
      tags:
        - auth
      summary: Signup/Register a new user
      parameters:
        - name: body
          in: body
          description: user Data
          required: true
          schema:
            $ref: '#/definitions/users'
      responses:
        201:
          description: 'Created'
        400:
          description: 'Bad Request'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'

  /login:
    post:
      tags:
        - auth
      summary: Login user with email and password
      parameters:
        - name: body
          in: body
          description: user Data
          required: true
          schema:
            $ref: '#/definitions/users'
      responses:
        200:
          description: 'OK'
        400:
          description: 'Bad Request'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'

  /verify:
    get:
      tags:
        - auth
      summary: Verify User
      parameters:
        - name: Auth Token
          in: Authorization
          description: Authorization Token
          required: true
      responses:
        200:
          description: 'OK'
        401:
          description: 'Wrong / Missing authentication token'
        500:
          description: 'Server Error'

  /logout:
    post:
      tags:
        - auth
      summary: Logout User
      parameters:
        - name: Auth Token
          in: Authorization
          description: Authorization Token
          required: true
      responses:
        200:
          description: 'OK'
        401:
          description: 'Wrong / Missing authentication token'
        500:
          description: 'Server Error'

# definitions
definitions:
  users:
    type: object
    required:
      - appraisals
      - name
      - dept
      - role
      - mobileNo
      - email
      - password
      - employeeId
      - jobTitle
      - employmentStatus

    properties:
      appraisals:
        type: string[]
        description: List of IDs of all appraisals tagged to the user

      name:
        type: string
        description: Name of User

      dept:
        type: string
        description: User Department

      role:
        type: string
        description: User Role

      mobileNo:
        type: string
        description: User Mobile Number

      email:
        type: string
        description: User Email

      password:
        type: string
        description: User Password

      employeeId:
        type: string
        description: User Employee ID

      jobTitle:
        type: string
        description: User Job Title

      employmentStatus:
        type: string
        description: User Employment Status

  question:
    type: object
    required:
      - description
      - type
      - required

    properties:
      description:
        type: string
        description: Description of the question

      type:
        type: integer
        description: Type of the question (open ended or rating)

      required:
        type: boolean
        description: Whether the question can be skipped

  answer:
    type: object
    required:
      - question
      - type
      - openEndedAnswer
      - rating
    properties:
      question:
        type: string
        description: ID of the related question
      type:
        type: integer
        description: Type of the answer
      openEndedAnswer:
        type: string
        description: Open-ended answer
      rating:
        type: integer
        description: Rating

  form:
    type: object
    required:
      - name
      - section
    properties:
      name:
        type: string
        description: Name of form

      description:
        type: string
        description: Description of form

      section:
        title:
          type: string
          description: Title of form
        questions:
          type: string
          description: List of IDs of questions in form

    appraisal:
      type: object
      required:
        - manageeId
        - managerId
        - formId
        - status
        - reviewId
        - deadline

      properties:
        manageeId:
          type: string
          description: ID of person getting appraised

        manangerId:
          type: string
          description: ID of person appraising

        formId:
          type: string
          description: ID of form done by the managee

        status:
          type: string
          description: Status of Appraisal

        reviewId:
          type: string
          description: ID of Appraisal Form

        deadline:
          type: date
          description: Deadline of Appraisal

  email:
    type: object
    required:
      - type
      - senderName
      - senderEmail
      - recipientName
      - recipientEmail
      - subject
      - body

    properties:
      type:
        type: string
        description: Type of email (Confirmation/Reminder)

      senderName:
        type: string
        description: Name of Sender

      senderEmail:
        type: string
        description: Email of Sender

      recipientName:
        type: string
        items: Name of Recipient

      recipientEmail:
        type: string
        items: Email of Recipient

      subject:
        type: string
        description: Subject of Email

      body:
        type: string
        description: Body of Email

      deadline:
        type: string
        description: Deadline of Appraisal

schemes:
  - https
  - http
