name: Jest Tests

on:
  push:
    branches:
      - main
      - test
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ./backend

    services:
      mongodb:
        image: mongo
        ports:
          - "27017:27017"
        volumes:
          - data:/data
        options: >-
          --health-cmd "mongo --eval 'db.runCommand({ ping: 1 })'"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

      mongo-express:
        image: mongo-express
        ports:
          - "8081:8081"
        env:
          ME_CONFIG_MONGODB_ADMINUSERNAME: rootuser
          ME_CONFIG_MONGODB_ADMINPASSWORD: rootpass
          ME_CONFIG_MONGODB_SERVER: mongodb
          ME_CONFIG_BASICAUTH_USERNAME: root
          ME_CONFIG_BASICAUTH_PASSWORD: pass
        options: >-
          --link mongodb:mongodb

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm install

      - name: Run Docker Compose
        run: docker-compose -f compose.yml up -d

      - name: Wait for MongoDB to be ready
        run: |
          echo "Waiting for MongoDB to be ready..."
          while ! docker-compose exec mongodb mongo --eval 'db.runCommand({ ping: 1 })' &>/dev/null; do
            sleep 1
          done
        shell: bash

      - name: Run Jest tests
        env:
          DB_HOST: localhost
          DB_PORT: 27017
          DB_DATABASE: dev
          DB_USERNAME: rootuser
          DB_PASSWORD: rootpass
          SECRET_KEY: semaphore
          ORIGIN: http://localhost:5173
          CREDENTIALS: true
        run: npm test

      - name: Stop Docker Compose
        if: always()
        run: docker-compose -f compose.yml down
